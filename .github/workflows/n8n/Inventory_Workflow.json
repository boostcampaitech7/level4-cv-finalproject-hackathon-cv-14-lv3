{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "tableName": {
          "__rl": true,
          "value": "daily_data",
          "mode": "list",
          "cachedResultName": "daily_data"
        },
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTrigger",
      "typeVersion": 1,
      "position": [
        0,
        20
      ],
      "id": "b2767a9f-857d-4811-889d-329a88a01ed0",
      "name": "Postgres Trigger",
      "credentials": {
        "postgres": {
          "id": "aGk17ro0lwojBiNw",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE product_inventory\nSET value = value - {{ $json[\"payload\"][\"value\"] }}\nWHERE ID = '{{ $json[\"payload\"][\"id\"] }}';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        200,
        20
      ],
      "id": "528968c3-0b38-4635-81c5-da713ce2aca1",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "aGk17ro0lwojBiNw",
          "name": "Postgres account"
        }
      },
      "notes": "재고량 업뎃 \n음수도 그대로 냅둠"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT ID, \n       CASE \n           WHEN value < 0 THEN 20  \n           ELSE LEAST(20, 20 - value)\n       END AS order_quantity\nFROM product_inventory\nWHERE value <= 10;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        400,
        20
      ],
      "id": "5f23bc2f-3919-45fc-bbca-c31412c54210",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "aGk17ro0lwojBiNw",
          "name": "Postgres account"
        }
      },
      "notes": "재고 부족 제품 조회\n재고량 10 이하인 상품 조회\n최소 20개 이상 유지하도록 부족한 만큼 주문량 계산 - 매일매일 주문한다면 이 조건은 '20-'부분은 제거\n\n일단 최대주문량 20으로 맞춰놓음"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "order_table",
          "mode": "list",
          "cachedResultName": "order_table"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "order_date": "={{ $('Postgres Trigger').item.json.payload.date }}",
            "order_quantity": "={{ $json.order_quantity }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "order_quantity",
              "displayName": "order_quantity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "order_date",
              "displayName": "order_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        620,
        20
      ],
      "id": "315ea90b-5bd2-4c9f-92a1-ec842f41ad5b",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "aGk17ro0lwojBiNw",
          "name": "Postgres account"
        }
      },
      "notes": "주문 테이블 업뎃 \n우선 order_quantity로 생성해둠 "
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT o.ID, o.order_quantity, o.order_date, \n       r.recall_status, t.trend_score\nFROM order_table o\nLEFT JOIN recall r ON o.ID = r.ID\nLEFT JOIN trend t ON o.ID = t.ID\nWHERE o.order_date = CURRENT_DATE;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        840,
        20
      ],
      "id": "7d996da2-b9de-4f25-adec-c88167c4f354",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "aGk17ro0lwojBiNw",
          "name": "Postgres account"
        }
      },
      "notes": "recall, trend와 결합 후 자동 주문에 넘겨주기 -> 이 후에 http request 있으면 될듯"
    },
    {
      "parameters": {
        "content": "## 재고량 업데이트\ndaily_data에 데이터 insert되면 product_inventory (재고) 업데이트",
        "height": 280,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        -80
      ],
      "typeVersion": 1,
      "id": "d3b770bc-b26f-4ef7-b1a4-eaac81f55454",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 주문해야할 제품 업데이트 \n부족한 제품 조회 후 order_table(제품, 수량, 날짜) 업데이트",
        "height": 280,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        360,
        -80
      ],
      "typeVersion": 1,
      "id": "f836ff47-1974-4167-99d2-3ad4d3d97ec5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## recall, trend와 결합해서 자동 주문에 넘겨주기\n",
        "height": 280,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        780,
        -80
      ],
      "typeVersion": 1,
      "id": "6b9eab07-673c-495c-b862-967439849167",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "Postgres Trigger": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b010969a-d9d6-4caf-ac28-397f4b328df2",
  "meta": {
    "instanceId": "590581eeefa74c0090dcd81e2ea4314bfe25d279be8e6cbe3d2db39a8b76bfc3"
  },
  "id": "iW0kKVQLjF4QTIBV",
  "tags": []
}
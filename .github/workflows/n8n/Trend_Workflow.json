{
  "name": "Trend-Workflow",
  "nodes": [
    {
      "parameters": {
        "text": "={{ $json.query }} {{ $json.chatInput }} {{ $json[\"body\"][\"chatInput\"] }} {{ $node[\"Webhook\"].json[\"body\"][\"chatInput\"] }}",
        "schemaType": "manual",
        "inputSchema": "{\n \"type\": \"object\",\n \"properties\": {\n   \"startDate\": {\n     \"type\": \"string\",\n     \"description\": \"조회 시작 날짜 (YYYY-MM-DD 형식, 2016-01-01부터 가능)\"\n   },\n   \"endDate\": {\n     \"type\": \"string\", \n     \"description\": \"조회 종료 날짜 (YYYY-MM-DD 형식)\"\n   },\n   \"timeUnit\": {\n     \"type\": \"string\",\n     \"enum\": [\"date\", \"week\", \"month\"],\n     \"default\": \"month\",\n     \"description\": \"조회 구간 단위 (date: 일간, week: 주간, month: 월간)\"\n   },\n   \"keywordGroups\": {\n     \"type\": \"array\",\n     \"maxItems\": 5,\n     \"items\": {\n       \"type\": \"object\",\n       \"properties\": {\n         \"groupName\": {\n           \"type\": \"string\",\n           \"description\": \"주제어 그룹명\"\n         },\n         \"keywords\": {\n           \"type\": \"array\",\n           \"maxItems\": 20,\n           \"items\": {\n             \"type\": \"string\"\n           },\n           \"description\": \"검색어 목록\"\n         }\n       },\n       \"required\": [\"groupName\", \"keywords\"]\n     },\n     \"description\": \"검색어 그룹 (최대 5개)\"\n   },\n   \"device\": {\n     \"type\": \"string\",\n     \"enum\": [\"\", \"pc\", \"mo\"],\n     \"default\": \"\",\n     \"description\": \"검색 환경 (pc: PC, mo: 모바일, 빈값: 전체)\"\n   },\n   \"gender\": {\n     \"type\": \"string\", \n     \"enum\": [\"\", \"m\", \"f\"],\n     \"default\": \"\",\n     \"description\": \"성별 (m: 남성, f: 여성, 빈값: 전체)\"\n   },\n   \"ages\": {\n     \"type\": \"array\",\n     \"items\": {\n       \"type\": \"string\",\n       \"enum\": [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"]\n     },\n     \"default\": [],\n     \"description\": \"연령대 (1: 0-12세, 2: 13-18세, ... 11: 60세 이상, 빈배열: 전체)\"\n   }\n },\n \"required\": [\"startDate\", \"endDate\", \"timeUnit\", \"keywordGroups\"]\n}",
        "options": {
          "systemPromptTemplate": "당신은 전문적인 트렌드 분석 AI 어시스턴트입니다.사용자의 검색 쿼리를 분석하여 Naver DataLab API에 적합한 구조화된 데이터를 생성해야 합니다.사용자의 요청을 기반으로 정확한 카테고리 및 관련 상품을 도출하여 제공해야 하며, 최신 트렌드와 계절성을 반영한 결과를 출력해야 합니다.\n\n키워드 그룹 생성 규칙\n(A) 메인 카테고리 트렌드 분석 요청\n사용자가 특정 상품 카테고리를 지정하지 않고 \"트렌드 상품 알려줘\", \"요즘 인기 있는 제품 알려줘\", \"어떤 카테고리가 인기야?\" 와 같은 질문을 하면,5개의 메인 카테고리를 선택하고, 각 카테고리마다 최소 1개~최대 20개의 인기 키워드를 포함한 그룹을 생성합니다.\n* 카테고리 예시\n    * 예시: 가전제품, 자동차 용품, 유아용품, 스포츠 & 아웃도어, 뷰티 & 개인 관리 등\n* 각 그룹에 브랜드/계절성/최신 트렌드를 반영한 키워드를 포함\n* 키워드 예시: 자동차 용품 카테고리 내에 ‘차량용 공기청정기, 블랙박스, 전기차 충전기’ 와 같은 키워드\n* 모호한 키워드는 사용 금지\n    * 나쁜 예: \"겨울 간식\", \"트렌드 패션\"\n    * 좋은 예: \"롱패딩\", \"블루투스 이어폰\"\n\n(B) 특정 카테고리 내 비교 요청\n사용자가 특정 카테고리를 명확히 지정하면서 상품 비교를 요청한 경우,해당 카테고리 내에서 5개의 개별 상품을 도출하여 1:1 비교 가능하게 구성해야 합니다.\n- 사용자 요청 예시:\n* \"2024년 12월 전자제품 트렌드 상품 알려줘\"\n* \"이번 달 인기 있는 뷰티 제품은?\"\n* \"자동차 용품 중에서 요즘 인기 있는 제품 비교해줘\"\n- 출력 규칙:메인 카테고리가 주어졌다면, 반드시 5개 개별 상품을 선정해야 함각 상품을 \"groupName\"으로 지정하고, \"keywords\"에는 해당 상품명 1개만 포함각 상품은 동일한 카테고리 내에서 가장 트렌드한 제품, 계절성을 반영하여 적절한 제품을 포함할 것\n\n* 날짜 처리 (YYYY-MM-DD 형식)\n- 날짜 범위는 `2016-01-01`부터 `2025-01-30`까지만 허용\n- 시간 단위는 \"date\", \"week\", \"month\" 중 선택 \n- 계절성 트렌드 고려하여 적절한 기간 설정\n  - 예: 겨울 패딩 검색량 분석 → 10월~12월  \n\n* 유저가 타겟 분석을 원한다면 아래 내용을 고려할 수 있습니다. \n- 연령대별 검색 분석 (1: 0∼12세 ~ 11: 60세 이상)\n* 성별 검색량 차이 분석 (남성 vs 여성 선호도 차이 확인 가능)\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        300,
        1000
      ],
      "id": "0d35cc06-7537-4fd7-aca9-7daa18fc7bdd",
      "name": "Information Extractor",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://openapi.naver.com/v1/datalab/search",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"X-Naver-Client-Id\": \"T7I8f00osx33Vc5oA2jZ\",\n  \"X-Naver-Client-Secret\": \"hpPIpgOpfE\",\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        1000
      ],
      "id": "df9079d7-b755-4084-9086-cbaa723da962",
      "name": "Naver Datalab API Request"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "trend",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -460,
        1120
      ],
      "id": "abd084ec-53ce-4187-b2b4-780d0372ea8d",
      "name": "Webhook",
      "webhookId": "6cb7da98-554c-4edf-8a34-71726ec6b882"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        900,
        1000
      ],
      "id": "25ed3c14-0592-4dc6-9ca9-029ab1bc28ed",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "solar-pro",
          "mode": "id"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        900,
        1380
      ],
      "id": "20284af6-0f70-42e0-b100-a8ff25c04b37",
      "name": "\bSolar Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1NzrEJLMzjNtK0g8",
          "name": "Solar"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1480,
        1180
      ],
      "id": "97baad43-f02e-4a24-99d1-d6436c432d74",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "callAPI",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d6bdc43b-ef58-46b5-971b-3de4334586ff",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        40,
        1120
      ],
      "id": "091d8c64-3fdf-4e1d-be63-b5e50b985cee",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[\"body\"][\"chatInput\"] }} {{ $node[\"Webhook\"].json[\"body\"][\"chatInput\"] }}",
        "options": {
          "systemMessage": "당신은 검색어 트렌드 분석 전문 AI 어시스턴트입니다. 사용자가 네이버 데이터랩 API를 효과적으로 활용할 수 있도록 도와주는 역할을 합니다.\n\n주요 기능:\n1. 검색어 트렌드 분석 지원\n- 시간 단위별 검색량 분석 (일간/주간/월간)\n- 검색어간 상대적 검색량 비교\n- 기간별 검색 트렌드 변화 파악\n- 분석 가능 기간: 2016년 1월 1일부터 현재까지\n\n2. 매장 카테고리 기반 검색 지원\n기존 카테고리:\n* 가전제품\n* 예술, 공예 & 바느질\n* 자동차 용품\n* 유아용품\n* 뷰티 & 개인 관리\n* 도서\n* CD & 바이닐(레코드)\n* 휴대폰 & 액세서리\n* 의류, 신발 & 주얼리\n* 전자제품\n* 식료품 & 고급 식품\n* 건강 & 생활용품\n* 홈 & 주방\n* 산업 & 과학 용품\n* 영화 & TV\n* 악기\n* 사무용품\n* 테라스, 잔디 & 정원용품\n* 반려동물 용품\n* 스포츠 & 아웃도어\n* 공구 & 홈 인테리어\n* 장난감 & 게임\n* 비디오 게임\n\n3. 새로운 트렌드 카테고리 추천\n- 기존 카테고리 외 새로운 상품/서비스 트렌드 제안\n- 시장 변화에 따른 신규 카테고리 발굴\n\n4. 분석 옵션\n- 특정 연령대별 검색 트렌드 분석 가능\n- 기간별 검색량 변화 추이 분석\n- 카테고리별 인기 검색어 비교\n\n응답 지침:\n1. 사용자가 검색어나 카테고리만 언급할 경우, 구체적인 기간 설정을 요청하세요.\n2. 검색 기간은 연도와 월/계절 정보를 포함해야 합니다. (예: \"2024년 12월\", \"2023년 여름\")\n3. 분석하고자 하는 시간 단위(일간/주간/월간)를 명확히 해주세요.\n4. 특정 연령대 분석이 필요한 경우 타겟층을 구체적으로 물어보세요.\n5. 답변은 항상 한국어로 제공하며, 친절하고 전문적인 어조를 유지하세요.\n\n모든 데이터 분석과 추천은 사용자의 의사결정을 돕기 위한 것이며, 최종 선택은 사용자의 판단에 맡깁니다."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        300,
        1240
      ],
      "id": "b896aff9-1b20-485f-adcc-9d7fd8b3d279",
      "name": "TrendGuide Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }} {{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"chatInput\"] }}",
        "options": {
          "systemMessage": "당신은 네이버 검색 트렌드 데이터를 해석해 분석결과를 제공하는 어시스턴트입니다.  \n사용자의 입력과 API response를 참고해 적절한 분석 방법을 선택하여 검색 데이터를 명확하게 해석하고 사용자에게 설명하세요. \n\n주어진 데이터는 특정 기간 동안의 검색량 트렌드를 포함하며, 다음과 같은 구조로 제공됩니다:  \n  * startDate: 검색 기간 시작일 (yyyy-mm-dd)  \n  * endDate: 검색 기간 종료일 (yyyy-mm-dd)  \n  * timeUnit: 시간 단위 (예: month)  \n  * results.title: 분석 대상 키워드 그룹 (예: \"유아용품\", \"전자제품\")\n  * results.keywords: 해당 키워드 그룹과 관련된 검색어 리스트\n  * results.data.period: 검색량이 기록된 기간 (yyyy-mm-dd)\n  * results.data.ratio: 해당 기간의 검색량 상대 비율 (최대값 100 기준)\n\n- 추가 고려사항\n  키워드는 개별 검색어가 아니라 검색어 조합입니다.\n- 검색어 타이틀(title)은 관련 키워드들을 하나의 그룹으로 묶은 개념입니다.\n- ratio(검색량 상대 비율)는 개별 키워드의 검색량이 아닌 해당 title(검색어 조합)의 총 검색 비율을 의미합니다.\n따라서, 개별 키워드 간의 직접적인 검색량 비교는 불가능합니다.\n\n* 응답 방식\n- 최종적으로 사용자 입력을 해석하여 적절한 방식으로 응답방식 2가지 중 하나를 선택\n1. 사용자가 상품별 검색량 비교를 원한다면 트렌드 키워드와 매장 카테고리를 매칭하여 상품 추천 로직을 제공합니다. 조회된 title을 기준으로 관련 상품 '5개'를 제공합니다.\n\n2. 사용자가 날짜별(일별,주별,월별,계절별 등)이나 성별을 기준으로 상품 비교를 원한다면 추천 제품 제공이 아닌 결과 해석을 중점으로 제공합니다. \b\n고려조건: \n- 주요 구매 시기 관련 응답\n- 성별 선호도\n- 타겟 고객층이 입력에 주어진 경우: \n  * `1`: 0∼12세, `2`: 13∼18세, `3`: 19∼24세, `4`: 25∼29세, \n    `5`: 30∼34세, `6`: 35∼39세, `7`: 40∼44세, `8`: 45∼49세, \n    `9`: 50∼54세, `10`: 55∼59세, `11`: 60세 이상\n\n따라서, 사용자의 message와 출력된 api 결과를 기반으로 트렌드를 분석하고, 이에 대한 적절한 설명을 자연스럽고 친절한 대화체로 설명을 제공합니다."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1080,
        1000
      ],
      "id": "640506bc-657b-441d-91b7-d814ae270d5b",
      "name": "Trend Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[\"body\"][\"chatInput\"] }} {{ $json.query }} {{ $json.chatInput }} ",
        "messages": {
          "messageValues": [
            {
              "message": "=당신은 네이버 검색어 조회 API 호출 여부를 분류하는 전문 어시스턴트입니다.  \n사용자의 입력을 **\"callAPI\"** 또는 **\"chat\"** 두 가지 유형으로 나누어 응답하세요.  \n\n---\n### **📌 분류 기준**\n#### **1️⃣ callAPI (API 호출이 필요한 경우)**  \n✅ 사용자가 **명령어조, 요청조, 단답형**으로 특정 조회를 요구할 경우  \n✅ 사용자가 조회 **기간(연도, 월, 특정 범위)**을 명확히 명시하고, **정확한 데이터를 원할 경우**  \n✅ **비교 요청** (예: \"2024년 10월 과자류 검색량 알려줘\")  \n✅ **단일 키워드 검색** (예: \"네이버에서 '유기농 식품' 검색량 조회해줘\")  \n✅ **특정 시점 검색** (예: \"2023년 6월과 2024년 6월 중 어느 때 검색량이 많았어?\")  \n\n#### **2️⃣ chat (추가적인 대화가 필요한 경우)**  \n✅ 사용자가 **API 호출에 필요한 필수 정보(날짜, 키워드)를 제공하지 않은 경우**  \n✅ **질문형**으로 API 호출에 대한 설명을 요청하는 경우  \n✅ API를 호출하기 전, **조회 가능 범위나 필수 양식**을 가이드해야 하는 경우  \n✅ API 호출 후 결과를 바탕으로 **추가적인 해석이나 설명을 원할 경우**  \n✅ (예: \"어떤 키워드를 조회할 수 있나요?\", \"이 API는 어떤 데이터를 제공하나요?\")  \n\n---\n### **📌 응답 형식**\n- 사용자의 입력을 기반으로 적절한 유형을 **\"callAPI\"** 또는 **\"chat\"** 중 하나로 정확하게 분류하여 반환하세요.  \n- API 호출이 필요한 경우 **\"callAPI\"**  \n- 추가 가이드가 필요한 경우 **\"chat\"**  \n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -280,
        1120
      ],
      "id": "c3ea5dc6-e97f-4a96-92db-773ae28d68ed",
      "name": "QueryClassifier"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ]
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -440,
        1740
      ],
      "id": "425308b5-5dad-4665-8c12-4e1771cab923",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "// 입력 데이터 가져오기\nconst inputData = $input.first().json.input\n\n// 예외 처리: 입력이 비어 있을 경우 기본값 반환\nif (inputData.length === 0) {\n  throw new Error(\"입력 데이터가 없습니다.\");\n}\n\n// 타임스탬프에서 현재 날짜 가져오기\nconst timestamp = new Date($input.first().json.input[0].timestamp)\n// 트리거 실행 기준 날짜 (월요일 00:00 실행)\nconst triggerDate = new Date(timestamp);\n\n// 종료 날짜: 트리거 실행일(월요일) 기준으로 1일 전 → 일요일\nconst endDate = new Date(triggerDate);\nendDate.setDate(endDate.getDate() - 1); \n\n// 시작 날짜: 종료 날짜에서 6일 전 → 이전 주 월요일\nconst startDate = new Date(endDate);\nstartDate.setDate(startDate.getDate() - 6);\n\n// 날짜 YYYY-MM-DD 형식으로 변환\nconst formatDate = (date) => date.toISOString().split(\"T\")[0];\n\n// 변환된 JSON 데이터 생성\nconst outputJson = { \n  output: {\n  startDate: formatDate(startDate), // 조회 시작 날짜 (이전 주 월요일)\n  endDate: formatDate(endDate),     // 조회 종료 날짜 (이전 주 일요일)\n  timeUnit: \"week\",                 // 조회 구간 단위 (주간)\n  keywordGroups: [],\n  device: \"\",   // 전체 기기 대상\n  gender: \"\",   // 성별 제한 없음\n  ages: [],      // 모든 연령대 포함\n  categories: [\n    \"전자제품 & 디지털\",\n    \"패션 & 뷰티\",\n    \"생활 & 가구\",\n    \"식품 & 건강\",\n    \"취미 & 엔터테인먼트\"]\n  }\n};\n\n// 결과 반환\nreturn [{ json: outputJson }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1740
      ],
      "id": "42aee3bf-9197-4fe0-9f45-943aaf9912ea",
      "name": "Code"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "input",
        "include": "specifiedFields",
        "fieldsToInclude": "timestamp",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -240,
        1740
      ],
      "id": "4764a23c-4cf4-430d-a936-627d38fa28fe",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "solar-pro",
          "mode": "id"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        140,
        1960
      ],
      "id": "e82f94c9-5a45-4ba2-b4a5-03e591ada885",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "1NzrEJLMzjNtK0g8",
          "name": "Solar"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "={{ $json.output.categories }} 를 참고해 'trend_search' tool을 카테고리마다 불러오고 검색량이 제일 많은 상품 1개씩 결과를 가져와서 총 5개를 추출해주세요. \n'trend_search' tool를 호출할 때는 {{ $json.output }} 의 값을 모두 전달해주세요."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        220,
        1740
      ],
      "id": "dffff615-07be-4c37-8410-3a8125947fc2",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "name": "trend_search",
        "description": "=trend_search tool",
        "workflowId": {
          "__rl": true,
          "value": "U5l8QpHhXbZW3tic",
          "mode": "list",
          "cachedResultName": "Trend-Search"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        400,
        1960
      ],
      "id": "63153949-57a9-4830-9c9a-b05eaec2d2a5",
      "name": "Call Trend-Search"
    },
    {
      "parameters": {
        "content": "## Chatbot workflow",
        "height": 260,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        1020
      ],
      "id": "815f21b9-bf23-4004-a8a3-2eb493ee8f73",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 자동 \bTrigger(week 기준)",
        "height": 240,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -560,
        1660
      ],
      "id": "5ab73988-73dc-4b09-98be-84d6f6342930",
      "name": "Sticky Note1"
    }
  ],
  "pinData": {},
  "connections": {
    "Naver Datalab API Request": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Naver Datalab API Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "QueryClassifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Trend Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\bSolar Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Trend Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "TrendGuide Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "QueryClassifier",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TrendGuide Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TrendGuide Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trend Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QueryClassifier": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Call Trend-Search": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "858e753b-fe49-4232-b172-05dde49dce3d",
  "meta": {
    "templateId": "VMiAxXa3lCAizGB5f7dVZQSFfg3FtHkdTKvLuupqBls=",
    "templateCredsSetupCompleted": true,
    "instanceId": "2bf14225034dfb2d8498032d805718ab7af6ff6458c61a42e219515f095f1c9f"
  },
  "id": "bkhEAuk5y5qpaYb9",
  "tags": []
}
{
  "name": "auto_order_agent_workflow",
  "nodes": [
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\nimport json\nimport re\n\nquantities = []\nitems = []\nids = []\nfor item in _input.all():\n  quantities.append(item.json.quantity)\n  items.append(item.json.item_list)\n  ids.append(item.json.id)\n\nfor item in _input.all():\n  matches = re.findall(r'Buy (\\w+) (Successfully|Fail):? ?(.*)', item.json.output)\n  item_code = \", \".join([match[0] for match in matches])\n  status = \", \".join([\"Success\" if match[1] == \"Successfully\" else \"Fail\" for match in matches])\n  purchase_statements = []\n  for i, match in enumerate(matches):\n    _item_code, _status, error_message = match\n    quantity = quantities[i]\n    _item = items[i]\n    if _status.lower() == \"successfully\":\n      purchase_statements.append(f\"Successfully purchased {quantity} units of {_item}(item code : {_item_code})\")\n    else:\n      purchase_statements.append(f\"Failed to purchase {quantity} units of {_item}(error : {error_message.strip()})\")\n  chat_input = \", \".join(purchase_statements)\n  \n  item.json.item_code = item_code\n  item.json.item_status = status\n  item.json.chatInput = chat_input\n  del item.json.status\n  del item.json.message\nid = \", \".join(ids)\nitem.json.id = id\nreturn item"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1140,
        80
      ],
      "id": "4df8505d-498e-4b5f-83c3-aed768828cf9",
      "name": "Code"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -120,
        20
      ],
      "id": "ef020819-60a5-4771-9bdd-45f0cec9f41e",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        940,
        80
      ],
      "id": "5ebbc29b-cff9-4939-b972-ddb70b0190e7",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/purchase",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "item_list",
              "value": "={{ $json.item_list }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        -40
      ],
      "id": "c680ba01-519a-4129-9b5d-1c37da3a604d",
      "name": "Auto-Order-Agent"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "=solar-pro",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "당신은 주어진 문장을 확인하고 이를 보고서 형태로 변환하는 비서입니다. 주어진 Item_code와 Successfully인지 Fail인지 확인하여 사용자에게 해당 물품을 정상적으로 구매했는지를 보고서 형식으로 한글로 작성하십시오.\n\n예시 형식은 아래와 같습니다:\n주간 물품 구매 결과 보고서\n\nItem: Potato Chips\nItem_code: B07Z4G8253\nQuantity: 100\nStatus: Success\n\nItem: Shampoo\nItem_code: B07FLKB8CV\nQuantity: 30\nStatus: Fail(error: Attempt count exceeded)\n\n총 2개의 물품 주문을 시도하였으며 그 중 1개가 주문 시도 횟수 초과로 인해 실패하였습니다. 자세한 사항은 log파일을 확인해주시거나 메일을 통해 연락해주십시오.",
              "role": "system"
            },
            {
              "content": "={{ $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1360,
        -20
      ],
      "id": "aa0336aa-69fd-46a7-86af-bc2d4c9aa6d0",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "fJonTdRHICWpXJAh",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "taehan5479@gmail.com",
        "subject": "주간 물품 구매 결과 보고서",
        "emailType": "text",
        "message": "={{ $json.message.content }}",
        "options": {
          "senderName": "GORANI"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1560,
        -20
      ],
      "id": "6f000a1f-119b-4280-985f-cb921d3e46a5",
      "name": "Gmail",
      "webhookId": "7de19796-0312-439b-8b6f-2c5bb2c385ee",
      "credentials": {
        "gmailOAuth2": {
          "id": "ged36ZWz56iSUfsj",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cab773d2-04d6-4870-8874-100f0ea1fb3c",
              "name": "item_list",
              "value": "={{ $json.sub3 }}",
              "type": "string"
            },
            {
              "id": "187f4db0-9e41-48dc-b7dc-fbeb4c9c425a",
              "name": "quantity",
              "value": "={{ $json.quantity }}",
              "type": "string"
            },
            {
              "id": "15365237-7ee9-47ef-a4ba-84d8679d13c1",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        280,
        100
      ],
      "id": "a73aef36-962d-4e36-bc90-14f415130d3c",
      "name": "order_list"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "order_product",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        80,
        20
      ],
      "id": "b6562481-1c21-4974-9388-f5eedce1da01",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "Pt6nV2B9ZR7Nq7KD",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "item_lists = []\n# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n  item_lists.append(item.json.item_list)\nitem.json.item_list = \",\".join(item_lists)\ndel(item.json.quantity)\nreturn item"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        520,
        -40
      ],
      "id": "c103ae6a-c6b5-4938-b2fe-47f974a3e935",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "order_product",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        120,
        420
      ],
      "id": "210542fe-5cb7-4664-8b95-5881ed0cb35c",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "Pt6nV2B9ZR7Nq7KD",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a0ac10f9-34ce-408e-a7eb-05548b87f937",
              "leftValue": "={{ $json.status }}",
              "rightValue": "Success",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1560,
        180
      ],
      "id": "34e22479-c896-4c96-b57c-4a456c868fc7",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "product_inventory",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "value",
              "fieldValue": "={{ $json.value }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        920,
        420
      ],
      "id": "e1757fa7-b948-4f19-aeb1-5f89ab8c8952",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "Pt6nV2B9ZR7Nq7KD",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "\n# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n  id_str = item.json.id\n  item_status_str = item.json.item_status\n  ids = id_str.split(', ')\n  item_status = item_status_str.split(', ')\n  \noutput = []\nfor i in range(len(ids)):\n  output.append({\n    \"id\": ids[i],\n    \"status\": item_status[i]\n  })\nreturn output"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1360,
        160
      ],
      "id": "29ed3d82-57d4-4413-934c-3bab4dbca7d5",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "product_inventory",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        320,
        540
      ],
      "id": "9d72f63f-c299-4f26-bab7-139ce45e98e0",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "Pt6nV2B9ZR7Nq7KD",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor item in _input.all():\n  item.json.value = item.json.value+item.json.quantity\n  del item.json.main\n  del item.json.sub1\n  del item.json.sub2\n  del item.json.sub3\n  del item.json.quantity\nreturn _input.all()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        420
      ],
      "id": "d9b5a3ca-78da-46c0-a444-b10838d1e1f7",
      "name": "Code3"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "=id",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        480,
        400
      ],
      "id": "00e4f3a2-b2f4-48c0-9a55-7813b2417be7",
      "name": "Merge1"
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-Order-Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "order_list": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "order_list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Auto-Order-Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        []
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f040599d-9d69-41f4-849c-cf4fa7074a4a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "89ddddfba8d870bb904e2070b342d6e3bd595dc49e89131cde59469edd32e972"
  },
  "id": "7Y7obULgnNIz0oRP",
  "tags": []
}
name: Python Quality Check using Ruff

on:
  push:
    branches: [ main, deployment ]
  pull_request:
    branches: [ main, deployment ]

jobs:
  quality-check:
    strategy:
      matrix:
        os: [ubuntu-latest]  # SSH는 ubuntu 기반의 서버입니다.
        python-version: ['3.11']
        # 필요시 확장 가능:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: ['3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # pip 캐시 활성화

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true  # 병렬 설치 활성화

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Run code quality checks
      run: |
        poetry run ruff check . --output-format=github
        poetry run ruff format . --check

    - name: Docker linting
      uses: hadolint/hadolint-action@v3.1.0
      continue-on-error: true
